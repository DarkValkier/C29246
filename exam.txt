Создать класс Person, описывающий состояние и поведение человека. У него должны быть следующие поля: 
— имя (строка)
— состояние здоровья (целое число)
— настроение (целое число)
— капитал (дробное число)

В качестве методов реализовать следующие функции:
— ИЗМЕНИТЬ СОСТОЯНИЕ 
 Параметры: здоровье, настроение, капитал (у всех параметров должно быть значение по-умолчанию 0)
 Принцип работы: изменяет соответствующие поля класса на указанные значения (ВАЖНО: не заменяет, а изменяет!).
Например, мы вызвали эту функцию, передав ей только значение капитала -10. Это значит, что у человека от поля капитала нужно отнять 10.
В случае, если один из параметров падает ниже нуля, метод должен выдать ошибку, для каждого параметра свою. Ошибки можно придумать самому.
Например, можно указать такие ошибки:
Если здоровье падает ниже нуля — человек скончался;
Если настроение падает ниже нуля — человек впал в депрессию;
Если капитал падает ниже нуля — человек обанкротился.
Для каждой ошибки в методе ИЗМЕНИТЬ СОСТОЯНИЕ создать отдельный класс, унаследованный от класса Exception.

— __str__
 Параметры: нет
 Принцип работы: должен возвращать строку, в которой перечисляются все поля класса и их значения на данный момент.

Для проверки работы создать 3 объекта класса Person и в бесконечном цикле (while True) случайным образом изменять состояние объектов (каждого отдельно). Для изменений сделать 2 варианта: работа (добавляет деньги, отнимает здоровье и настроение) и отдых (добавляет настроение и здоровье, но может отнять деньги). Вариант изменения выбирать случайным образом. В цикле отлавливать ошибки, которые выдаёт метод ИЗМЕНИТЬ СОСТОЯНИЕ.


Реализовать класс Action, который представляет из себя занятие, влияющее на состояние человека. У него должны быть те же поля, что и у класса Person (название, здоровье, настроение, деньги), которые будут показывать как именно это занятие повлияет на человека. Добавить в класс Person метод ЗАНЯТЬСЯ, который будет принимать в себя объект класса Action и изменять состояние человека согласно значениям в Action.

Унаследовать от Action два класса: Work и Rest. Их функционал остаётся тем же, что и у Action. В методе ЗАНЯТЬСЯ класса Person проверять тип параметра, который пришёл (для этого использовать функцию type()). В зависимости от типа должно меняться и 
поведение метода:
Если передан объект класса Action – просто изменить состояние человека на значения, указанные в объекте;
Если передан объект класса Work — то же, что и с Action, только если значение настроения больше 90, то денег 
должно прибавится на 10% больше;
Если передан объект класса Rest — то же, что и с Action, только если значение здоровья меньше 40, то настроения 
должно прибавится на 20% меньше;

